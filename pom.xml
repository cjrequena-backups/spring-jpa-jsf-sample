<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.sample</groupId>
	<artifactId>spring-jpa-jsf-sample</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<scm>
		<connection>scm:git:https://github.com/cjrequena/spring-mvc-jpa-sample.git</connection>
		<developerConnection>scm:git:https://github.com/cjrequena/spring-mvc-jpa-sample.git</developerConnection>
		<tag>HEAD</tag>
	</scm>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<!--
        ================
        Maven plugins
        ================
        -->
		<maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
		<maven-resources-plugin.version>2.7</maven-resources-plugin.version>
		<maven-dependency-plugin.version>2.10</maven-dependency-plugin.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		<maven-jar-plugin.version>2.6</maven-jar-plugin.version>
		<buildnumber-maven-plugin.version>1.4</buildnumber-maven-plugin.version>
		<maven-javadoc-plugin.version>2.8</maven-javadoc-plugin.version>
		<maven-project-info-reports-plugin.version>2.4</maven-project-info-reports-plugin.version>
		<maven-site-plugin.version>3.4</maven-site-plugin.version>
		<maven-enforcer-plugin.version>1.4.1</maven-enforcer-plugin.version>
		<maven-surefire-plugin.version>2.19</maven-surefire-plugin.version>
		<maven-failsafe-plugin.version>2.19</maven-failsafe-plugin.version>
		<sonar-maven-plugin.version>2.7.1</sonar-maven-plugin.version>
		<jacoco-maven-plugin.version>0.7.5.201505241946</jacoco-maven-plugin.version>
		<!--
        ================
        Dependencies
        ================
        -->
		<!-- Spring -->
		<org.springframework.version>4.3.3.RELEASE</org.springframework.version>
		<org.springframework.security.version>4.1.3.RELEASE</org.springframework.security.version>
		<org.springframework.data.version>1.10.4.RELEASE</org.springframework.data.version>
		<org.aspectj.version>1.8.9</org.aspectj.version>
		<!-- Database -->
		<postgresql.version>9.3-1100-jdbc41</postgresql.version>
		<mysql-connector-java.version>5.1.35</mysql-connector-java.version>
		<mariadb-java-client.version>1.1.7</mariadb-java-client.version>
		<hikaricp.version>2.4.3</hikaricp.version>
		<org.hibernate.version>5.2.3.Final</org.hibernate.version>
		<hibernate-validator.version>5.2.4.Final</hibernate-validator.version>
		<!-- JSF -->
		<org.primefaces.themes.version>1.0.10</org.primefaces.themes.version>
		<!-- Logging-->
		<log4j2.version>2.5</log4j2.version>
		<!-- Boilerplate -->
		<lombok.version>1.16.6</lombok.version>
		<orika-core.version>1.4.6</orika-core.version>
		<!-- Testing and covering -->
		<junit.version>4.12</junit.version>
		<jmockit.version>1.19</jmockit.version>
		<podam.version>6.0.2.RELEASE</podam.version>
		<dbunit.version>2.4.9</dbunit.version>
		<!--
        ================
        CI Configutation
        ================
        -->
		<!-- Jacoco output directory | For multimodule projects change this property on parent project with <jacoco.outputDir>${project.basedir}/../target</jacoco.outputDir>-->
		<jacoco.outputDir>${project.build.directory}/coverage-reports</jacoco.outputDir>
		<jacoco.it.execution.data.file>${jacoco.outputDir}/jacoco-it.exec</jacoco.it.execution.data.file>
		<jacoco.ut.execution.data.file>${jacoco.outputDir}/jacoco-ut.exec</jacoco.ut.execution.data.file>
		<sonar.jacoco.reportPath>${jacoco.ut.execution.data.file}</sonar.jacoco.reportPath>
		<sonar.jacoco.itReportPath>${jacoco.it.execution.data.file}</sonar.jacoco.itReportPath>
		<sonar.surefire.reportsPath>${project.build.directory}/surefire-reports</sonar.surefire.reportsPath>
		<sonar.binaries>${project.build.directory}/classes</sonar.binaries>
		<sonar.analysis.mode>publish</sonar.analysis.mode>
		<sonar.host.url>http://localhost:9000</sonar.host.url>
		<skip.integration.tests>true</skip.integration.tests>
		<skip.unit.tests>false</skip.unit.tests>
		<!-- -->
		<releases.repo.url></releases.repo.url>
		<snapshots.repo.url></snapshots.repo.url>
	</properties>
	<profiles>
		<profile>
			<id>all-test</id>
			<properties>
				<!-- All tests are run. -->
				<skip.integration.tests>false</skip.integration.tests>
				<skip.unit.tests>false</skip.unit.tests>
			</properties>
		</profile>
		<profile>
			<id>integration-test</id>
			<properties>
				<!-- Only integration tests are run. -->
				<skip.integration.tests>false</skip.integration.tests>
				<skip.unit.tests>true</skip.unit.tests>
			</properties>
		</profile>
		<profile>
			<id>unit-test</id>
			<properties>
				<!-- Only integration tests are run. -->
				<skip.integration.tests>true</skip.integration.tests>
				<skip.unit.tests>false</skip.unit.tests>
			</properties>
		</profile>
	</profiles>
	<dependencies>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>${org.springframework.data.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${org.springframework.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${org.springframework.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${org.springframework.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-aspects</artifactId>
			<version>${org.springframework.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${org.springframework.security.version}</version>
		</dependency>
		<!-- Database -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${org.hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${org.hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate-validator.version}</version>
		</dependency>
		<!-- Fast, simple, reliable. HikariCP is a "zero-overhead" production ready
			JDBC connection pool. At roughly 90Kb, the library is very light. -->
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>${hikaricp.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.18</version>
		</dependency>
		<!-- Java Server Faces & Primefaces -->
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>el-api</artifactId>
			<version>2.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.faces</groupId>
			<artifactId>jsf-api</artifactId>
			<version>2.1.2</version>
		</dependency>
		<dependency>
			<groupId>com.sun.faces</groupId>
			<artifactId>jsf-impl</artifactId>
			<version>2.1.2</version>
		</dependency>
		<dependency>
			<groupId>org.primefaces</groupId>
			<artifactId>primefaces</artifactId>
			<version>5.0</version>
		</dependency>
		<dependency>
			<groupId>org.primefaces.themes</groupId>
			<artifactId>all-themes</artifactId>
			<version>${org.primefaces.themes.version}</version>
		</dependency>
		<!-- aspectj -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${org.aspectj.version}</version>
		</dependency>
		<!-- -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.3.2</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		<!-- -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.2</version>
		</dependency>
		<!-- Boilerplate -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
		</dependency>
		<!-- -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>2.5</version>
		</dependency>
	</dependencies>
	<build>
		<pluginManagement>
			<plugins>
				<!-- -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<compilerArgument>-Xlint:all</compilerArgument>
						<showWarnings>true</showWarnings>
						<showDeprecation>true</showDeprecation>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>3.0.0</version>
					<configuration>
						<failOnMissingWebXml>false</failOnMissingWebXml>
					</configuration>
				</plugin>
				<!-- -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.7</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<!-- -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.6</version>
				</plugin>
				<!-- -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>buildnumber-maven-plugin</artifactId>
					<version>1.3</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.7.5.201505241946</version>
					<executions>
						<!-- Prepares the property pointing to the JaCoCo runtime agent which
							is passed as VM argument when Maven the Surefire plugin is executed. -->
						<execution>
							<id>pre-unit-test</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<destFile>${jacoco.ut.execution.data.file}</destFile>
								<!-- Sets the name of the property containing the settings for JaCoCo
									runtime agent. -->
								<propertyName>surefireArgLine</propertyName>
							</configuration>
						</execution>
						<!-- Ensures that the code coverage report for unit tests is created
							after unit tests have been run. -->
						<execution>
							<id>post-unit-test</id>
							<phase>test</phase>
							<goals>
								<goal>report</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<dataFile>${jacoco.ut.execution.data.file}</dataFile>
								<!-- Sets the output directory for the code coverage report. -->
								<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
							</configuration>
						</execution>
						<!-- Prepares the property pointing to the JaCoCo runtime agent which
							is passed as VM argument when Maven the Failsafe plugin is executed. -->
						<execution>
							<id>pre-integration-test</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<destFile>${jacoco.it.execution.data.file}</destFile>
								<!-- Sets the name of the property containing the settings for JaCoCo
									runtime agent. -->
								<propertyName>failsafeArgLine</propertyName>
							</configuration>
						</execution>
						<!-- Ensures that the code coverage report for integration tests after
							integration tests have been run. -->
						<execution>
							<id>post-integration-test</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>report</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<dataFile>${jacoco.it.execution.data.file}</dataFile>
								<!-- Sets the output directory for the code coverage report. -->
								<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- Used for unit tests -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.18.1</version>
					<configuration>
						<!-- Sets the VM argument line used when unit tests are run. -->
						<argLine>${surefireArgLine}</argLine>
						<!-- Skips unit tests if the value of skip.unit.tests property is true -->
						<skipTests>${skip.unit.tests}</skipTests>
						<!-- Excludes integration tests when unit tests are run. -->
						<excludes>
							<exclude>**/IT*.java</exclude>
						</excludes>
					</configuration>
				</plugin>
				<!-- Used for integration tests -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.15</version>
					<executions>
						<!-- Ensures that both integration-test and verify goals of the Failsafe
							Maven plugin are executed. -->
						<execution>
							<id>integration-tests</id>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
							<configuration>
								<!-- Sets the VM argument line used when integration tests are run. -->
								<argLine>${failsafeArgLine}</argLine>
								<!-- Skips integration tests if the value of skip.integration.tests
									property is true -->
								<skipTests>${skip.integration.tests}</skipTests>
								<!-- -->
								<argLine>${jacoco.agent.surefire.argLine} -Dfile.encoding=UTF-8</argLine>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>aspectj-maven-plugin</artifactId>
					<version>1.7</version>
					<configuration>
						<showWeaveInfo>true</showWeaveInfo>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<Xlint>ignore</Xlint>
						<complianceLevel>${java.version}</complianceLevel>
						<encoding>UTF-8</encoding>
						<verbose>false</verbose>
						<aspectLibraries>
							<aspectLibrary>
								<groupId>org.springframework</groupId>
								<artifactId>spring-aspects</artifactId>
							</aspectLibrary>
						</aspectLibraries>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>compile</goal>
								<goal>test-compile</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>org.aspectj</groupId>
							<artifactId>aspectjrt</artifactId>
							<version>${org.aspectj.version}</version>
						</dependency>
						<dependency>
							<groupId>org.aspectj</groupId>
							<artifactId>aspectjtools</artifactId>
							<version>${org.aspectj.version}</version>
						</dependency>
					</dependencies>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
			</plugin>
			<!-- -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<!-- -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>
			<!-- -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
			<!-- -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<!-- -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>
			<!-- -->
			<!--<plugin>-->
				<!--<groupId>org.codehaus.mojo</groupId>-->
				<!--<artifactId>aspectj-maven-plugin</artifactId>-->
			<!--</plugin>-->
		</plugins>
	</build>
</project>